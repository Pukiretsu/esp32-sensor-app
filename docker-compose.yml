services:
  # Servicio de la aplicación FastAPI
  app:
    build: . # Construye la imagen de Docker desde el Dockerfile en el directorio actual
    container_name: secador_solar_app
    restart: unless-stopped # Reinicia el contenedor a menos que se detenga manualmente
    # No se exponen puertos directamente al host, Traefik se encargará de esto
    # La aplicación escuchará internamente en el puerto 8000
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    networks:
      - web_network # Conecta la aplicación a la red que Traefik puede ver
    labels:
      # Etiquetas de Traefik para descubrir y configurar el enrutamiento
      - "traefik.enable=true"
      # Redirección de HTTP a HTTPS
      - "traefik.http.routers.app-http.entrypoints=web"
      - "traefik.http.routers.app-http.rule=Host(`secador-solar-gia.online`)" 
      - "traefik.http.routers.app-http.middlewares=redirect-to-https"
      # Enrutador HTTPS
      - "traefik.http.routers.app-https.entrypoints=websecure"
      - "traefik.http.routers.app-https.rule=Host(`secador-solar-gia.online`)"
      - "traefik.http.routers.app-https.tls=true"
      - "traefik.http.routers.app-https.tls.certresolver=myresolver"
      - "traefik.http.services.app-service.loadbalancer.server.port=8000" 

  # Middleware para redireccionar HTTP a HTTPS
  redirector:
    image: traefik/whoami
    container_name: traefik_redirector_dummy
    networks:
      - web_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"

  # Servicio Traefik
  traefik:
    image: traefik:v2.10 # Usar una imagen oficial de Traefik v2
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"   # Puerto HTTP
      - "443:443" # Puerto HTTPS
      # - "8080:8080" # Opcional: Puerto para el dashboard de Traefik (solo para depuración, no en producción)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Permite a Traefik escuchar eventos de Docker
      - ./traefik.yml:/etc/traefik/traefik.yml:ro # Monta el archivo de configuración estática de Traefik
      - ./acme.json:/acme.json # Archivo para almacenar los certificados de Let's Encrypt
    command:
      # Habilita el proveedor de Docker para descubrimiento automático de servicios
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false # Traefik solo enrutará servicios con etiquetas traefik.enable=true
      # Configura los puntos de entrada (entrypoints)
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      # Habilita y configura el resolvedor de certificados Let's Encrypt
      - --certificatesresolvers.myresolver.acme.email=your-email@example.com # Reemplaza con tu email real
      - --certificatesresolvers.myresolver.acme.storage=/acme.json
      - --certificatesresolvers.myresolver.acme.httpchallenge=true
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
      # Habilita el dashboard de Traefik (opcional, comentar en producción)
      # - --api.dashboard=true
      # - --api.insecure=true # Permite acceder al dashboard sin autenticación (solo para desarrollo)
    networks:
      - web_network # Conecta Traefik a la red compartida

networks:
  web_network:
    external: false # Define una red interna para los contenedores
